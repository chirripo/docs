{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chirripo Docs \u00b6 This is the official documentation for Chirripo . What is Chirripo? \u00b6 Chirripo is the name of the tallest mountain in Costa Rica and it's also the name of this cool tool that we have created to simplify your Docker environment setup. Why to use Chirripo? \u00b6 Chirripo makes it possible to add a cool setup of Docker containers to any existing php application by simply adding a composer package. How to use Chirripo? \u00b6 To use Chirripo, you need to add the composer package to any existing project, copy the environment variables file and then start using it. More information on Getting Started page. Requirements \u00b6 Only requirements are: Composer managed project Docker Docker Compose Existing commands \u00b6 Look at the existing commands in the Commands page. Chirripo Launcher \u00b6 See launcher docs at Chirripo Launcher Chirripo Proxy \u00b6 See proxy docs at Chirripo Proxy How-to \u00b6 Read How-to documentation in the How-to page. Updating Chirripo \u00b6 Updating Chirripo is as simple as updating any other composer package. Then, you could update your environment variables if new variables were added. Contributing \u00b6 You are welcomed to contribute to Chirripo. To do so, check current issues or create new issues . More information at Contributing","title":"Home"},{"location":"#chirripo-docs","text":"This is the official documentation for Chirripo .","title":"Chirripo Docs"},{"location":"#what-is-chirripo","text":"Chirripo is the name of the tallest mountain in Costa Rica and it's also the name of this cool tool that we have created to simplify your Docker environment setup.","title":"What is Chirripo?"},{"location":"#why-to-use-chirripo","text":"Chirripo makes it possible to add a cool setup of Docker containers to any existing php application by simply adding a composer package.","title":"Why to use Chirripo?"},{"location":"#how-to-use-chirripo","text":"To use Chirripo, you need to add the composer package to any existing project, copy the environment variables file and then start using it. More information on Getting Started page.","title":"How to use Chirripo?"},{"location":"#requirements","text":"Only requirements are: Composer managed project Docker Docker Compose","title":"Requirements"},{"location":"#existing-commands","text":"Look at the existing commands in the Commands page.","title":"Existing commands"},{"location":"#chirripo-launcher","text":"See launcher docs at Chirripo Launcher","title":"Chirripo Launcher"},{"location":"#chirripo-proxy","text":"See proxy docs at Chirripo Proxy","title":"Chirripo Proxy"},{"location":"#how-to","text":"Read How-to documentation in the How-to page.","title":"How-to"},{"location":"#updating-chirripo","text":"Updating Chirripo is as simple as updating any other composer package. Then, you could update your environment variables if new variables were added.","title":"Updating Chirripo"},{"location":"#contributing","text":"You are welcomed to contribute to Chirripo. To do so, check current issues or create new issues . More information at Contributing","title":"Contributing"},{"location":"chirripo-launcher/","text":"Chirripo Launcher \u00b6 You can install the Launcher to use Chirripo commands by simply using chirripo command. In order to use it, you should follow these instructions: Install either globally ( composer global require chirripo/chirripo-launcher ) or by using cgr ( cgr chirripo/chirripo-launcher ) Now the chirripo binary is available globally. Make sure your global vendor binaries directory is in your $PATH environment variable, you can get its location with the following command: 1 php composer.phar global config bin-dir --absolute Use Chirripo by simply invoking chirripo from any project using chirripo If you have Chirripo proxy installed; you can also manage it with chirripo proxy-up and chirripo proxy-down commands","title":"Chirripo Launcher"},{"location":"chirripo-launcher/#chirripo-launcher","text":"You can install the Launcher to use Chirripo commands by simply using chirripo command. In order to use it, you should follow these instructions: Install either globally ( composer global require chirripo/chirripo-launcher ) or by using cgr ( cgr chirripo/chirripo-launcher ) Now the chirripo binary is available globally. Make sure your global vendor binaries directory is in your $PATH environment variable, you can get its location with the following command: 1 php composer.phar global config bin-dir --absolute Use Chirripo by simply invoking chirripo from any project using chirripo If you have Chirripo proxy installed; you can also manage it with chirripo proxy-up and chirripo proxy-down commands","title":"Chirripo Launcher"},{"location":"chirripo-proxy/","text":"Chirripo Proxy \u00b6 You can install the Chirripo Proxy to access chirripo sites using domain names. In order to use it, you should follow these instructions: Install either globally ( composer global require chirripo/chirripo-proxy ) or by using cgr ( cgr chirripo/chirripo-proxy ) Now the chirripo-proxy binary is available globally. Make sure your global vendor binaries directory is in your $PATH environment variable, you can get its location with the following command: 1 php composer.phar global config bin-dir --absolute Use Chirripo proxy by simply invoking chirripo-proxy from any folder If you have Chirripo launcher installed; you can also invoke proxy from it with chirripo proxy-up and chirripo proxy-down commands. Requirements \u00b6 You need ports 80 & 8085 free to use this proxy. Start proxy \u00b6 Set VIRTUAL_HOST variable in your Chirripo managed project like this: 1 VIRTUAL_HOST=mycoolproject.docker Restart your Chirripo containers with the following containers: 1 2 ./vendor/bin/chirripo stop ./vendor/bin/chirripo start Start proxy by running chirripo-proxy up Add hosts entries to your hosts file (/etc/hosts for Linux/Mac) like this: 1 127.0.0.1 mycoolproject.docker varnish.mycoolproject.docker mailhog.mycoolproject.docker solr.mycoolproject.docker Access your site at url set in VIRTUAL_HOST variable. You can also access the optional services at the above domains if the services are enabled. Stop proxy \u00b6 Stop proxy by running chirripo-proxy down Ready!","title":"Chirripo Proxy"},{"location":"chirripo-proxy/#chirripo-proxy","text":"You can install the Chirripo Proxy to access chirripo sites using domain names. In order to use it, you should follow these instructions: Install either globally ( composer global require chirripo/chirripo-proxy ) or by using cgr ( cgr chirripo/chirripo-proxy ) Now the chirripo-proxy binary is available globally. Make sure your global vendor binaries directory is in your $PATH environment variable, you can get its location with the following command: 1 php composer.phar global config bin-dir --absolute Use Chirripo proxy by simply invoking chirripo-proxy from any folder If you have Chirripo launcher installed; you can also invoke proxy from it with chirripo proxy-up and chirripo proxy-down commands.","title":"Chirripo Proxy"},{"location":"chirripo-proxy/#requirements","text":"You need ports 80 & 8085 free to use this proxy.","title":"Requirements"},{"location":"chirripo-proxy/#start-proxy","text":"Set VIRTUAL_HOST variable in your Chirripo managed project like this: 1 VIRTUAL_HOST=mycoolproject.docker Restart your Chirripo containers with the following containers: 1 2 ./vendor/bin/chirripo stop ./vendor/bin/chirripo start Start proxy by running chirripo-proxy up Add hosts entries to your hosts file (/etc/hosts for Linux/Mac) like this: 1 127.0.0.1 mycoolproject.docker varnish.mycoolproject.docker mailhog.mycoolproject.docker solr.mycoolproject.docker Access your site at url set in VIRTUAL_HOST variable. You can also access the optional services at the above domains if the services are enabled.","title":"Start proxy"},{"location":"chirripo-proxy/#stop-proxy","text":"Stop proxy by running chirripo-proxy down Ready!","title":"Stop proxy"},{"location":"contributing/","text":"Contributing \u00b6 Are you interested in contributing to Chirripo? Want to report a bug? Before you do, please read the following guidelines. Submission context \u00b6 Got a question or problem? \u00b6 Please submit an issue to the issue tracker . We will reply back as soon as possible. Found a bug? \u00b6 If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository . Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines. Missing a feature? \u00b6 You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone. Submission guidelines \u00b6 Submitting an issue \u00b6 Before you submit an issue, please search the issue tracker , maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue. Submitting a Pull Request (PR) \u00b6 Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development: Fork the project, set up the development environment, make your changes in a separate git branch and add descriptive messages to your commits. Test: Before submitting a pull requests, test all of your changes. To do so, you can add the project to any existing PHP project by using Composer Path Repository (you can use TravisCI setup as an example). This is a mandatory requirement for your PR to get accepted, as the package should at all times be installable through Packagist. Pull Request: After building the theme, commit the compiled output, push your branch to GitHub and send a PR to chirripo/chirripo:master. If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. At all times, please ensure the automated build passes so that a minimal amount of tests are passed for your code. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Contributing"},{"location":"contributing/#contributing","text":"Are you interested in contributing to Chirripo? Want to report a bug? Before you do, please read the following guidelines.","title":"Contributing"},{"location":"contributing/#submission-context","text":"","title":"Submission context"},{"location":"contributing/#got-a-question-or-problem","text":"Please submit an issue to the issue tracker . We will reply back as soon as possible.","title":"Got a question or problem?"},{"location":"contributing/#found-a-bug","text":"If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository . Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines.","title":"Found a bug?"},{"location":"contributing/#missing-a-feature","text":"You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone.","title":"Missing a feature?"},{"location":"contributing/#submission-guidelines","text":"","title":"Submission guidelines"},{"location":"contributing/#submitting-an-issue","text":"Before you submit an issue, please search the issue tracker , maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue.","title":"Submitting an issue"},{"location":"contributing/#submitting-a-pull-request-pr","text":"Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development: Fork the project, set up the development environment, make your changes in a separate git branch and add descriptive messages to your commits. Test: Before submitting a pull requests, test all of your changes. To do so, you can add the project to any existing PHP project by using Composer Path Repository (you can use TravisCI setup as an example). This is a mandatory requirement for your PR to get accepted, as the package should at all times be installable through Packagist. Pull Request: After building the theme, commit the compiled output, push your branch to GitHub and send a PR to chirripo/chirripo:master. If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. At all times, please ensure the automated build passes so that a minimal amount of tests are passed for your code. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Submitting a Pull Request (PR)"},{"location":"getting-started/","text":"Getting Started \u00b6 This page intends to be a quick-start guide for Chirripo. In order to start using it, the first step is to add the package to your project: 1 composer require --dev chirripo/chirripo Then, you need to copy and edit the variables file: 1 cp vendor/chirripo/chirripo/env.example .env Edit the file according to your needs. Please remember to change at least the following variables: PROJECT_NAME : so that it doesn't conflict with any other project using Chirripo PROJECT_ROOT : so that the mount volumes to the container work as expected PROJECT_DOCROOT : actual docroot within your project (e.g. web or docroot) PORT_PREFIX : there should be a different PORT_PREFIX for any project using Chirripo Then, you can start the containers: 1 ./vendor/bin/chirripo start And finally enjoy your development environment! Please refer to the Commands documentation to know about all the available commands.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"This page intends to be a quick-start guide for Chirripo. In order to start using it, the first step is to add the package to your project: 1 composer require --dev chirripo/chirripo Then, you need to copy and edit the variables file: 1 cp vendor/chirripo/chirripo/env.example .env Edit the file according to your needs. Please remember to change at least the following variables: PROJECT_NAME : so that it doesn't conflict with any other project using Chirripo PROJECT_ROOT : so that the mount volumes to the container work as expected PROJECT_DOCROOT : actual docroot within your project (e.g. web or docroot) PORT_PREFIX : there should be a different PORT_PREFIX for any project using Chirripo Then, you can start the containers: 1 ./vendor/bin/chirripo start And finally enjoy your development environment! Please refer to the Commands documentation to know about all the available commands.","title":"Getting Started"},{"location":"usage/","text":"Usage \u00b6 Requirements \u00b6 To run Chirripo you need: Composer managed project Docker (You can get it at https://docs.docker.com/get-docker/ if not installed) Docker Compose (You can get it at https://docs.docker.com/compose/install/ if not installed) Install package \u00b6 Install as with any other composer package: 1 composer require --dev chirripo/chirripo Copy example variables file \u00b6 Copy example variables file from vendor/chirripo/chirripo/env.example to .env: 1 cp vendor/chirripo/chirripo/env.example .env Edit variables as needed \u00b6 Open .env file and change variables as needed. See Variables description to understand all existing variables. Start containers \u00b6 Start the containers by running: 1 ./vendor/bin/chirripo start You are now ready to use Chirripo! Read the documentation about available commands Chirripo Launcher \u00b6 See launcher docs at Chirripo Launcher Chirripo Proxy \u00b6 See proxy docs at Chirripo Proxy Advanced usage \u00b6 You can override even more stuff in your containers setup by creating a docker-compose.override.yml file in the root of your project to override any stuff in the provided docker-compose files. More documentation on overrides can be found in official docker compose documentation .","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#requirements","text":"To run Chirripo you need: Composer managed project Docker (You can get it at https://docs.docker.com/get-docker/ if not installed) Docker Compose (You can get it at https://docs.docker.com/compose/install/ if not installed)","title":"Requirements"},{"location":"usage/#install-package","text":"Install as with any other composer package: 1 composer require --dev chirripo/chirripo","title":"Install package"},{"location":"usage/#copy-example-variables-file","text":"Copy example variables file from vendor/chirripo/chirripo/env.example to .env: 1 cp vendor/chirripo/chirripo/env.example .env","title":"Copy example variables file"},{"location":"usage/#edit-variables-as-needed","text":"Open .env file and change variables as needed. See Variables description to understand all existing variables.","title":"Edit variables as needed"},{"location":"usage/#start-containers","text":"Start the containers by running: 1 ./vendor/bin/chirripo start You are now ready to use Chirripo! Read the documentation about available commands","title":"Start containers"},{"location":"usage/#chirripo-launcher","text":"See launcher docs at Chirripo Launcher","title":"Chirripo Launcher"},{"location":"usage/#chirripo-proxy","text":"See proxy docs at Chirripo Proxy","title":"Chirripo Proxy"},{"location":"usage/#advanced-usage","text":"You can override even more stuff in your containers setup by creating a docker-compose.override.yml file in the root of your project to override any stuff in the provided docker-compose files. More documentation on overrides can be found in official docker compose documentation .","title":"Advanced usage"},{"location":"variables-description/","text":"Variables Description \u00b6 The variables file is grouped into several sections as described below. General Vars \u00b6 Variable Details PROJECT_ROOT The full path to the project root location in your host. PROJECT_DOCROOT The path to the docroot within your project root (e.g. web or docroot). PROJECT_NAME The name of the project. Used to prefix the containers names. PORT_PREFIX 3 digits prefix for the ports used to expose the different services. Nginx container \u00b6 Variable Details NGINX_TAG Image tag for the nginx service. Used image is official nginx image. PHP Container \u00b6 Variable Details PHP_TAG Image tag for the php service. Used image is chirripo/php. PHP_POST_MAX_SIZE Post max size setting in php container. PHP_UPLOAD_MAX_FILESIZE Upload max filesize setting in the php container. XDEBUG_ENABLE Enable or disable Xdebug. Use string \"enable\" to enable it. Anything else to disable it. DB Container \u00b6 Variable Details DB_TAG Image tag for the db service. Used image is official mariadb image. MYSQL_ROOT_PASSWORD Password for db root user. MYSQL_DATABASE Database to create. MYSQL_USER User with privileges in given database. MYSQL_PASSWORD Password for given user. CLI Container \u00b6 Variable Details CLI_TAG Image tag for the cli service. Used image is chirripo/cli. Varnish Container \u00b6 Variable Details VARNISH_ENABLE Set to 1 if you want varnish enabled. 0 otherwise. VARNISH_TAG Image tag for the varnish service. Used image is thiagofigueiro/varnish-alpine-docker. Mailhog Container \u00b6 Variable Details MAILHOG_ENABLE Set to 1 if you want mailhog enabled. 0 otherwise. MAILHOG_TAG Image tag for the mailhog service. Used image is mailhog/mailhog. Solr Container \u00b6 Variable Details SOLR_ENABLE Set to 1 if you want solr enabled. 0 otherwise. SOLR_TAG Image tag for the solr service. Used image is official solr image. Memcached Container \u00b6 Variable Details MEMCACHE_ENABLE Set to 1 if you want memcached enabled. 0 otherwise. MEMCACHE_TAG Image tag for the memcached service. Used image is official memcached image. Selenium Container \u00b6 Variable Details SELENIUM_ENABLE Set to 1 if you want selenium enabled. 0 otherwise. SELENIUM_TAG Image tag for the selenium service. Used image is selenium/standalone-chrome-debug. Blackfire Container \u00b6 Variable Details BLACKFIRE_ENABLE Set to 1 if you want blackfire enabled. 0 otherwise. BLACKFIRE_TAG Image tag for the blackfire service. Used image is blackfire/blackfire. BLACKFIRE_SERVER_ID Blackfire server id from your Blackfire account. BLACKFIRE_SERVER_TOKEN Blackfire server token from your Blackfire account.","title":"Variables description"},{"location":"variables-description/#variables-description","text":"The variables file is grouped into several sections as described below.","title":"Variables Description"},{"location":"variables-description/#general-vars","text":"Variable Details PROJECT_ROOT The full path to the project root location in your host. PROJECT_DOCROOT The path to the docroot within your project root (e.g. web or docroot). PROJECT_NAME The name of the project. Used to prefix the containers names. PORT_PREFIX 3 digits prefix for the ports used to expose the different services.","title":"General Vars"},{"location":"variables-description/#nginx-container","text":"Variable Details NGINX_TAG Image tag for the nginx service. Used image is official nginx image.","title":"Nginx container"},{"location":"variables-description/#php-container","text":"Variable Details PHP_TAG Image tag for the php service. Used image is chirripo/php. PHP_POST_MAX_SIZE Post max size setting in php container. PHP_UPLOAD_MAX_FILESIZE Upload max filesize setting in the php container. XDEBUG_ENABLE Enable or disable Xdebug. Use string \"enable\" to enable it. Anything else to disable it.","title":"PHP Container"},{"location":"variables-description/#db-container","text":"Variable Details DB_TAG Image tag for the db service. Used image is official mariadb image. MYSQL_ROOT_PASSWORD Password for db root user. MYSQL_DATABASE Database to create. MYSQL_USER User with privileges in given database. MYSQL_PASSWORD Password for given user.","title":"DB Container"},{"location":"variables-description/#cli-container","text":"Variable Details CLI_TAG Image tag for the cli service. Used image is chirripo/cli.","title":"CLI Container"},{"location":"variables-description/#varnish-container","text":"Variable Details VARNISH_ENABLE Set to 1 if you want varnish enabled. 0 otherwise. VARNISH_TAG Image tag for the varnish service. Used image is thiagofigueiro/varnish-alpine-docker.","title":"Varnish Container"},{"location":"variables-description/#mailhog-container","text":"Variable Details MAILHOG_ENABLE Set to 1 if you want mailhog enabled. 0 otherwise. MAILHOG_TAG Image tag for the mailhog service. Used image is mailhog/mailhog.","title":"Mailhog Container"},{"location":"variables-description/#solr-container","text":"Variable Details SOLR_ENABLE Set to 1 if you want solr enabled. 0 otherwise. SOLR_TAG Image tag for the solr service. Used image is official solr image.","title":"Solr Container"},{"location":"variables-description/#memcached-container","text":"Variable Details MEMCACHE_ENABLE Set to 1 if you want memcached enabled. 0 otherwise. MEMCACHE_TAG Image tag for the memcached service. Used image is official memcached image.","title":"Memcached Container"},{"location":"variables-description/#selenium-container","text":"Variable Details SELENIUM_ENABLE Set to 1 if you want selenium enabled. 0 otherwise. SELENIUM_TAG Image tag for the selenium service. Used image is selenium/standalone-chrome-debug.","title":"Selenium Container"},{"location":"variables-description/#blackfire-container","text":"Variable Details BLACKFIRE_ENABLE Set to 1 if you want blackfire enabled. 0 otherwise. BLACKFIRE_TAG Image tag for the blackfire service. Used image is blackfire/blackfire. BLACKFIRE_SERVER_ID Blackfire server id from your Blackfire account. BLACKFIRE_SERVER_TOKEN Blackfire server token from your Blackfire account.","title":"Blackfire Container"},{"location":"commands/","text":"Available Commands \u00b6 This is a list of existing commands: db-import docker-compose down drush logs mysql php-info php-modules restart ssh start status stop url If you want another command to be available, please submit the feature request following the Contributing guidelines.","title":"Available Commands"},{"location":"commands/#available-commands","text":"This is a list of existing commands: db-import docker-compose down drush logs mysql php-info php-modules restart ssh start status stop url If you want another command to be available, please submit the feature request following the Contributing guidelines.","title":"Available Commands"},{"location":"commands/db-import/","text":"db-import \u00b6 Import given db file to the default database. Usage \u00b6 1 ./vendor/bin/chirripo db-import [arguments] Aliases \u00b6 No aliases defined. Available arguments \u00b6 Argument Details filepath Path to the .sql.gz file to import. System requirements \u00b6 This command requires a gunzip command present in your system. Note about behavior \u00b6 This command will use pv to improve performance and to be able to handle large db files if it is available in your system; otherwise it will fallback to more standard database import method.","title":"db-import"},{"location":"commands/db-import/#db-import","text":"Import given db file to the default database.","title":"db-import"},{"location":"commands/db-import/#usage","text":"1 ./vendor/bin/chirripo db-import [arguments]","title":"Usage"},{"location":"commands/db-import/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/db-import/#available-arguments","text":"Argument Details filepath Path to the .sql.gz file to import.","title":"Available arguments"},{"location":"commands/db-import/#system-requirements","text":"This command requires a gunzip command present in your system.","title":"System requirements"},{"location":"commands/db-import/#note-about-behavior","text":"This command will use pv to improve performance and to be able to handle large db files if it is available in your system; otherwise it will fallback to more standard database import method.","title":"Note about behavior"},{"location":"commands/docker-compose/","text":"docker-compose \u00b6 Executes docker-compose commands. Usage \u00b6 1 ./vendor/bin/chirripo docker-compose [arguments] Aliases \u00b6 compose dc Available arguments \u00b6 Argument Details composeCommand Any argument passed here will be passed directly to docker-compose command. It is recommended to prepend the whole set of arguments with -- to forward them exactly as expected to docker-compose command.","title":"docker-compose"},{"location":"commands/docker-compose/#docker-compose","text":"Executes docker-compose commands.","title":"docker-compose"},{"location":"commands/docker-compose/#usage","text":"1 ./vendor/bin/chirripo docker-compose [arguments]","title":"Usage"},{"location":"commands/docker-compose/#aliases","text":"compose dc","title":"Aliases"},{"location":"commands/docker-compose/#available-arguments","text":"Argument Details composeCommand Any argument passed here will be passed directly to docker-compose command. It is recommended to prepend the whole set of arguments with -- to forward them exactly as expected to docker-compose command.","title":"Available arguments"},{"location":"commands/down/","text":"down \u00b6 Stops containers and removes containers and networks for current project. Usage \u00b6 1 ./vendor/bin/chirripo down Aliases \u00b6 No aliases defined.","title":"down"},{"location":"commands/down/#down","text":"Stops containers and removes containers and networks for current project.","title":"down"},{"location":"commands/down/#usage","text":"1 ./vendor/bin/chirripo down","title":"Usage"},{"location":"commands/down/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/drush/","text":"drush \u00b6 Executes drush commands. Usage \u00b6 1 ./vendor/bin/chirripo drush [arguments] Aliases \u00b6 No aliases defined. Available arguments \u00b6 Argument Details drushCommand Any argument passed here will be passed directly to drush command. It is recommended to prepend the whole set of arguments with \"--\" to forward them exactly as expected to drush command.","title":"drush"},{"location":"commands/drush/#drush","text":"Executes drush commands.","title":"drush"},{"location":"commands/drush/#usage","text":"1 ./vendor/bin/chirripo drush [arguments]","title":"Usage"},{"location":"commands/drush/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/drush/#available-arguments","text":"Argument Details drushCommand Any argument passed here will be passed directly to drush command. It is recommended to prepend the whole set of arguments with \"--\" to forward them exactly as expected to drush command.","title":"Available arguments"},{"location":"commands/list/","text":"list \u00b6 List available commands. Usage \u00b6 1 ./vendor/bin/chirripo list Aliases \u00b6 No aliases defined.","title":"list"},{"location":"commands/list/#list","text":"List available commands.","title":"list"},{"location":"commands/list/#usage","text":"1 ./vendor/bin/chirripo list","title":"Usage"},{"location":"commands/list/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/logs/","text":"logs \u00b6 Executes docker-compose logs. Usage \u00b6 1 ./vendor/bin/chirripo logs [arguments] Aliases \u00b6 log Available arguments \u00b6 Argument Details service Service to get the logs for. Default: nginx","title":"logs"},{"location":"commands/logs/#logs","text":"Executes docker-compose logs.","title":"logs"},{"location":"commands/logs/#usage","text":"1 ./vendor/bin/chirripo logs [arguments]","title":"Usage"},{"location":"commands/logs/#aliases","text":"log","title":"Aliases"},{"location":"commands/logs/#available-arguments","text":"Argument Details service Service to get the logs for. Default: nginx","title":"Available arguments"},{"location":"commands/mysql/","text":"mysql \u00b6 Executes mysql commands. Usage \u00b6 1 ./vendor/bin/chirripo mysql [arguments] Aliases \u00b6 No aliases defined. Available arguments \u00b6 Argument Details query SQL Query to execute in default database. It will be executed as root user.","title":"mysql"},{"location":"commands/mysql/#mysql","text":"Executes mysql commands.","title":"mysql"},{"location":"commands/mysql/#usage","text":"1 ./vendor/bin/chirripo mysql [arguments]","title":"Usage"},{"location":"commands/mysql/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/mysql/#available-arguments","text":"Argument Details query SQL Query to execute in default database. It will be executed as root user.","title":"Available arguments"},{"location":"commands/php-info/","text":"php-info \u00b6 Print php info from php container Usage \u00b6 1 ./vendor/bin/chirripo php-info Aliases \u00b6 phpi","title":"php-info"},{"location":"commands/php-info/#php-info","text":"Print php info from php container","title":"php-info"},{"location":"commands/php-info/#usage","text":"1 ./vendor/bin/chirripo php-info","title":"Usage"},{"location":"commands/php-info/#aliases","text":"phpi","title":"Aliases"},{"location":"commands/php-modules/","text":"php-modules \u00b6 Print php -m from php container Usage \u00b6 1 ./vendor/bin/chirripo php-modules Aliases \u00b6 phpm","title":"php-modules"},{"location":"commands/php-modules/#php-modules","text":"Print php -m from php container","title":"php-modules"},{"location":"commands/php-modules/#usage","text":"1 ./vendor/bin/chirripo php-modules","title":"Usage"},{"location":"commands/php-modules/#aliases","text":"phpm","title":"Aliases"},{"location":"commands/restart/","text":"restart \u00b6 Restart current project containers. Usage \u00b6 1 ./vendor/bin/chirripo restart Aliases \u00b6 No aliases defined.","title":"restart"},{"location":"commands/restart/#restart","text":"Restart current project containers.","title":"restart"},{"location":"commands/restart/#usage","text":"1 ./vendor/bin/chirripo restart","title":"Usage"},{"location":"commands/restart/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/ssh/","text":"ssh \u00b6 SSH into cli container. Usage \u00b6 1 ./vendor/bin/chirripo ssh Aliases \u00b6 No aliases defined.","title":"ssh"},{"location":"commands/ssh/#ssh","text":"SSH into cli container.","title":"ssh"},{"location":"commands/ssh/#usage","text":"1 ./vendor/bin/chirripo ssh","title":"Usage"},{"location":"commands/ssh/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/start/","text":"start \u00b6 Start current project containers. Usage \u00b6 1 ./vendor/bin/chirripo start Aliases \u00b6 No aliases defined.","title":"start"},{"location":"commands/start/#start","text":"Start current project containers.","title":"start"},{"location":"commands/start/#usage","text":"1 ./vendor/bin/chirripo start","title":"Usage"},{"location":"commands/start/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/status/","text":"status \u00b6 Print status of current project containers. Usage \u00b6 1 ./vendor/bin/chirripo status Aliases \u00b6 ps","title":"status"},{"location":"commands/status/#status","text":"Print status of current project containers.","title":"status"},{"location":"commands/status/#usage","text":"1 ./vendor/bin/chirripo status","title":"Usage"},{"location":"commands/status/#aliases","text":"ps","title":"Aliases"},{"location":"commands/stop/","text":"stop \u00b6 Stops containers for current project. Usage \u00b6 1 ./vendor/bin/chirripo stop Aliases \u00b6 No aliases defined.","title":"stop"},{"location":"commands/stop/#stop","text":"Stops containers for current project.","title":"stop"},{"location":"commands/stop/#usage","text":"1 ./vendor/bin/chirripo stop","title":"Usage"},{"location":"commands/stop/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/url/","text":"url \u00b6 Print url for given service. Usage \u00b6 1 ./vendor/bin/chirripo url [arguments] Aliases \u00b6 No aliases defined. Available arguments \u00b6 Argument Details service Service to get the url for. Default: nginx","title":"url"},{"location":"commands/url/#url","text":"Print url for given service.","title":"url"},{"location":"commands/url/#usage","text":"1 ./vendor/bin/chirripo url [arguments]","title":"Usage"},{"location":"commands/url/#aliases","text":"No aliases defined.","title":"Aliases"},{"location":"commands/url/#available-arguments","text":"Argument Details service Service to get the url for. Default: nginx","title":"Available arguments"},{"location":"how-to/","text":"How-to \u00b6 How-to documents in this section: Setup Xdebug Setup Blackfire If you want to contribute to these docs, please create a Pull Request to the docs repo .","title":"How-to guides"},{"location":"how-to/#how-to","text":"How-to documents in this section: Setup Xdebug Setup Blackfire If you want to contribute to these docs, please create a Pull Request to the docs repo .","title":"How-to"},{"location":"how-to/setup-blackfire/","text":"Setup xdebug \u00b6 In order to setup blackfire you need to: Set BLACKFIRE_ENABLE variable to \"1\" Set BLACKFIRE_SERVER_ID to the right value from your Blackfire account Set BLACKFIRE_SERVER_TOKEN to the right value from your Blackfire account Stop and start containers: 1 2 ./vendor/bin/chirripo stop ./vendor/bin/chirripo start Then you can start profiling by using the browser companion or the cli tool . Happy profiling!","title":"Setup Blackfire"},{"location":"how-to/setup-blackfire/#setup-xdebug","text":"In order to setup blackfire you need to: Set BLACKFIRE_ENABLE variable to \"1\" Set BLACKFIRE_SERVER_ID to the right value from your Blackfire account Set BLACKFIRE_SERVER_TOKEN to the right value from your Blackfire account Stop and start containers: 1 2 ./vendor/bin/chirripo stop ./vendor/bin/chirripo start Then you can start profiling by using the browser companion or the cli tool . Happy profiling!","title":"Setup xdebug"},{"location":"how-to/setup-xdebug/","text":"Setup xdebug \u00b6 In order to setup xdebug you need to: Set XDEBUG_ENABLED variable to \"enable\" Stop and start containers: 1 2 ./vendor/bin/chirripo stop ./vendor/bin/chirripo start You need to configure your code editor to use debugging. Find an example with VSCode below. Point your browser to the desired url using XDEBUG_SESSION_START query parameter like this: http://127.0.0.1:10080??XDEBUG_SESSION_START=anything Xdebug setup with VSCode \u00b6 You need to edit your launch.json like this: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"Listen for XDebug\", \"type\": \"php\", \"request\": \"launch\", \"port\": 9000, \"pathMappings\": { \"/var/www/html\": \"${workspaceRoot}\" } } ] } Then, you can Start Debugging","title":"Setup Xdebug"},{"location":"how-to/setup-xdebug/#setup-xdebug","text":"In order to setup xdebug you need to: Set XDEBUG_ENABLED variable to \"enable\" Stop and start containers: 1 2 ./vendor/bin/chirripo stop ./vendor/bin/chirripo start You need to configure your code editor to use debugging. Find an example with VSCode below. Point your browser to the desired url using XDEBUG_SESSION_START query parameter like this: http://127.0.0.1:10080??XDEBUG_SESSION_START=anything","title":"Setup xdebug"},{"location":"how-to/setup-xdebug/#xdebug-setup-with-vscode","text":"You need to edit your launch.json like this: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"Listen for XDebug\", \"type\": \"php\", \"request\": \"launch\", \"port\": 9000, \"pathMappings\": { \"/var/www/html\": \"${workspaceRoot}\" } } ] } Then, you can Start Debugging","title":"Xdebug setup with VSCode"}]}