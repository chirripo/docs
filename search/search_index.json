{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chirripo Docs \u00b6 This is the official documentation for Chirripo . What is Chirripo? \u00b6 Chirripo is the name of the tallest mountain in Costa Rica and it's also the name of this cool tool that we have created to simplify your Docker environment setup. Why to use Chirripo? \u00b6 Chirripo makes it possible to add a cool setup of Docker containers to any existing php application by simply adding a composer package. How to use Chirripo? \u00b6 To use Chirripo, you need to add the composer package to any existing project, copy the environment variables file and then start using it. More information on Getting Started page. Requirements \u00b6 Only requirements are: Composer managed project Docker Docker Compose Existing commands \u00b6 Look at the existing commands in the Commands page. Updating Chirripo \u00b6 Updating Chirripo is as simple as updating any other composer package. Then, you could update your environment variables if new variables were added. Contributing \u00b6 You are welcomed to contribute to Chirripo. To do so, check current issues or create new issues . More information at Contributing","title":"Home"},{"location":"#chirripo-docs","text":"This is the official documentation for Chirripo .","title":"Chirripo Docs"},{"location":"#what-is-chirripo","text":"Chirripo is the name of the tallest mountain in Costa Rica and it's also the name of this cool tool that we have created to simplify your Docker environment setup.","title":"What is Chirripo?"},{"location":"#why-to-use-chirripo","text":"Chirripo makes it possible to add a cool setup of Docker containers to any existing php application by simply adding a composer package.","title":"Why to use Chirripo?"},{"location":"#how-to-use-chirripo","text":"To use Chirripo, you need to add the composer package to any existing project, copy the environment variables file and then start using it. More information on Getting Started page.","title":"How to use Chirripo?"},{"location":"#requirements","text":"Only requirements are: Composer managed project Docker Docker Compose","title":"Requirements"},{"location":"#existing-commands","text":"Look at the existing commands in the Commands page.","title":"Existing commands"},{"location":"#updating-chirripo","text":"Updating Chirripo is as simple as updating any other composer package. Then, you could update your environment variables if new variables were added.","title":"Updating Chirripo"},{"location":"#contributing","text":"You are welcomed to contribute to Chirripo. To do so, check current issues or create new issues . More information at Contributing","title":"Contributing"},{"location":"contributing/","text":"Contributing \u00b6 Are you interested in contributing to Chirripo? Want to report a bug? Before you do, please read the following guidelines. Submission context \u00b6 Got a question or problem? \u00b6 Please submit an issue to the issue tracker . We will reply back as soon as possible. Found a bug? \u00b6 If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository . Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines. Missing a feature? \u00b6 You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone. Submission guidelines \u00b6 Submitting an issue \u00b6 Before you submit an issue, please search the issue tracker , maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue. Submitting a Pull Request (PR) \u00b6 Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development: Fork the project, set up the development environment, make your changes in a separate git branch and add descriptive messages to your commits. Test: Before submitting a pull requests, test all of your changes. To do so, you can add the project to any existing PHP project by using Composer Path Repository (you can use TravisCI setup as an example). This is a mandatory requirement for your PR to get accepted, as the package should at all times be installable through Packagist. Pull Request: After building the theme, commit the compiled output, push your branch to GitHub and send a PR to chirripo/chirripo:master. If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. At all times, please ensure the automated build passes so that a minimal amount of tests are passed for your code. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Contributing"},{"location":"contributing/#contributing","text":"Are you interested in contributing to Chirripo? Want to report a bug? Before you do, please read the following guidelines.","title":"Contributing"},{"location":"contributing/#submission-context","text":"","title":"Submission context"},{"location":"contributing/#got-a-question-or-problem","text":"Please submit an issue to the issue tracker . We will reply back as soon as possible.","title":"Got a question or problem?"},{"location":"contributing/#found-a-bug","text":"If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository . Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines.","title":"Found a bug?"},{"location":"contributing/#missing-a-feature","text":"You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone.","title":"Missing a feature?"},{"location":"contributing/#submission-guidelines","text":"","title":"Submission guidelines"},{"location":"contributing/#submitting-an-issue","text":"Before you submit an issue, please search the issue tracker , maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue.","title":"Submitting an issue"},{"location":"contributing/#submitting-a-pull-request-pr","text":"Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development: Fork the project, set up the development environment, make your changes in a separate git branch and add descriptive messages to your commits. Test: Before submitting a pull requests, test all of your changes. To do so, you can add the project to any existing PHP project by using Composer Path Repository (you can use TravisCI setup as an example). This is a mandatory requirement for your PR to get accepted, as the package should at all times be installable through Packagist. Pull Request: After building the theme, commit the compiled output, push your branch to GitHub and send a PR to chirripo/chirripo:master. If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. At all times, please ensure the automated build passes so that a minimal amount of tests are passed for your code. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Submitting a Pull Request (PR)"},{"location":"getting-started/","text":"Getting Started \u00b6 This page intends to be a quick-start guide for Chirripo. In order to start using it, the first step is to add the package to your project: composer require --dev chirripo/chirripo Then, you need to copy and edit the variables file: cp vendor/chirripo/chirripo/env.example .env And edit the file according to your needs. Please remember to change the following at least: PROJECT_NAME: so that it doesn't conflict with any other project using Chirripo PROJECT_ROOT: so that the mount volumes to the container work as expected PORT_PREFIX: there should be a different PORT_PREFIX for any project using Chirripo Then, you can start the containers: ./vendor/bin/chirripo start Finally, enjoy your development environment! Please refer to the Commands to know about all the available commands.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"This page intends to be a quick-start guide for Chirripo. In order to start using it, the first step is to add the package to your project: composer require --dev chirripo/chirripo Then, you need to copy and edit the variables file: cp vendor/chirripo/chirripo/env.example .env And edit the file according to your needs. Please remember to change the following at least: PROJECT_NAME: so that it doesn't conflict with any other project using Chirripo PROJECT_ROOT: so that the mount volumes to the container work as expected PORT_PREFIX: there should be a different PORT_PREFIX for any project using Chirripo Then, you can start the containers: ./vendor/bin/chirripo start Finally, enjoy your development environment! Please refer to the Commands to know about all the available commands.","title":"Getting Started"},{"location":"usage/","text":"Usage \u00b6 Requirements \u00b6 And how to install them Install package \u00b6 Copy variables \u00b6 And describe variables Start containers \u00b6 etc, etc, etc Code blocks example \u00b6 1 import tensorflow as tf 1 ./vendor/bin/chirripo ps Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. More examples of admonition: https://squidfunk.github.io/mkdocs-material/extensions/admonition/","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#requirements","text":"And how to install them","title":"Requirements"},{"location":"usage/#install-package","text":"","title":"Install package"},{"location":"usage/#copy-variables","text":"And describe variables","title":"Copy variables"},{"location":"usage/#start-containers","text":"etc, etc, etc","title":"Start containers"},{"location":"usage/#code-blocks-example","text":"1 import tensorflow as tf 1 ./vendor/bin/chirripo ps Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. More examples of admonition: https://squidfunk.github.io/mkdocs-material/extensions/admonition/","title":"Code blocks example"},{"location":"commands/","text":"Commands \u00b6 This is a list of existing commands: start","title":"Commands"},{"location":"commands/#commands","text":"This is a list of existing commands: start","title":"Commands"},{"location":"commands/start/","text":"To start chirripo...","title":"Start"}]}